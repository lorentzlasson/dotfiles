# imitate vim
set-window-option -g mode-keys vi

# use space as leader
unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# split using v/h and maintain working dir
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# jump using hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


bind r swap-pane -D

# copy paste like vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe 'xclip -in -selection clipboard' \; send -X clear-selection

# Enter to yank selection and exit
bind-key -T copy-mode-vi 'Enter' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Don't cancel copy mode on mouse release
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X clear-selection
unbind -T copy-mode-vi MouseDragEnd1Pane

# These are default binding, but having them explicit here
# as something is overriding the previous-window binding
bind p previous-window
bind n next-window
bind u last-window

# ease reconfig
bind-key R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Set default term to xterm
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# kill panel on q
bind q killp

# allow mouse scroll
set -g mouse on

# enable history
set -g history-file ~/.tmux_history

set status-style "bg=black"

# unbind "next-layout"
unbind Space

# Plugins managed declaratively via NixOS
